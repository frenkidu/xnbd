<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.5//EN" [

<!-- Process this file with docbook-to-man to generate an nroff manual
     page: `docbook-to-man manpage.sgml > manpage.1'.  You may view
     the manual page with: `docbook-to-man manpage.sgml | nroff -man |
     less'.  A typical entry in a Makefile or Makefile.am is:

manpage.1: manpage.sgml
	docbook-to-man $< > $@
  -->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "<firstname>Arno</firstname>">
  <!ENTITY dhsurname   "<surname>Toell</surname>">
  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY dhdate      "<date>$Date$</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY dhsection   "<manvolnum>8</manvolnum>">
  <!ENTITY dhemail     "<email>debian@toell.net</email>">
  <!ENTITY dhusername  "Arno Toell">
  <!ENTITY dhucpackage "<refentrytitle>XNBD-WRAPPER</refentrytitle>">
  <!ENTITY dhpackage   "xnbd-wrapper">

  <!ENTITY debian      "<productname>Debian GNU/Linux</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
]>

<refentry>
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
    <copyright>
      <year>2011</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>

    <refpurpose>manage multiple files to be exported as a block device to other
    computers running the &gnu;/Linux(tm) Operating System</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <arg> <arg choice='plain'>--imgfile <replaceable>IMAGE</replaceable></arg>
      <arg rep='repeat'>--imgfile <replaceable>IMAGE</replaceable></arg> </arg>
      <arg>--laddr  <replaceable>ADDRESS</replaceable></arg>
      <arg>--port  <replaceable>PORT</replaceable></arg>
      <arg>--socket  <replaceable>PATH</replaceable></arg>
      <arg>--xnbd-binary  <replaceable>PATH</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para><command>&dhpackage;</command> is a super-server for
    <command>xnbd-server</command>. Its purpose is to manage multiple exported
    images at once. A client may connect to this super-server and it will be
    indirected to the actual <command>xnbd-server</command> providing the
    requested resource.</para>
    <para><command>&dhpackage;</command> comes handy if you want to export
    multiple files (or block devices) on a single host. Instead of starting
    multiple <command>xnbd-server</command> instances and remember the exported
    port for each, you can use <command>&dhpackage;</command> to looks up the
    requested <replaceable>image</replaceable> file name and map it
    automatically to the corresponding <command>xnbd-server</command>.</para>
  </refsect1>
  <refsect1>
    <title>OPTIONS</title>

    <para>The following options are supported:</para>

    <variablelist>

      <varlistentry>
	<term><option>--imgfile <replaceable>IMAGE</replaceable></option>
	</term>
	<listitem>
	<para>Export the image file <replaceable>IMAGE</replaceable> through
	<command>&dhpackage;</command>, with <replaceable>IMAGE</replaceable>
	being a block device or a file name of an image file. </para>
	<para><command>&dhpackage;</command> will export the file name
	accessible through this name to clients, which may connect to the server
	by providing this name</para>
	<para>This option can be specified multiple times. In this case,
	<command>&dhpackage;</command> will export all
	<replaceable>IMAGE</replaceable> files at once. Alternatively this
	argument can be omitted and images may be (un-)exported ar runtime with
	<command>xnbd-wrapper-ctl</command>.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--laddr <replaceable>ADDRESS</replaceable></option>
	</term>
	<listitem>
	<para>The address, where this wrapper shall listen for incoming
	connections. You can specify any resolvable hostname or IP address,
	being in IPv4 or IPv6 notation.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><option>--lport <replaceable>PORT</replaceable></option>
	</term>
	<listitem>
	  <para>Accept incoming connections on the given <replaceable>PORT</replaceable>. A valid port is
	    any number between 1 and 65536. You may not use the same listeing
	    port more than once per system. If this argument is not given, xNBD
	    will listen on port 8520 by default.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
        <term><option>--socket <replaceable>PATH</replaceable></option>
	</term>
	<listitem>
          <para>The xNBD wrapper can be controlled through a control socket. When
          given, use <replaceable>PATH</replaceable> as file name, default is
          <emphasis>/tmp/xnbd_wrapper.ctl</emphasis>).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><option>--xnbd-binary <replaceable>PATH</replaceable></option>
	</term>
	<listitem>
          <para>Specifies the path to the <command>xnbd-server</command>
	  program. The wrapper will spawn server instances on demand. Give
	  <replaceable>PATH</replaceable> as file name, default is
	  <emphasis>xnbd-server</emphasis> (relative to the directory, where the
	  wrapper is in).</para>
        </listitem>
      </varlistentry>


    </variablelist>
  </refsect1>

  <refsect1>
    <title>SEE ALSO</title>

    <para>xnbd-client (1), xnbd-server (8), xnbd-wrapper-ctl (8).</para>

  </refsect1>
  <refsect1>
    <title>AUTHOR</title>
    <para>The NBD kernel module and the NBD tools have been written by
    Pavel Macheck (pavel@ucw.cz) and is now maintained by Paul Clements.
    (Paul.Clements@steeleye.com).</para>

    <para>The xNBD userland (client and server) have been written by
     Takahiro Hirofuchi (t.hirofuchi@aist.go.jp)</para>

    <para>This manual page was written by &dhusername; (&dhemail;) for
    the &debian; system (but may be used by others). Permission is
    granted to copy, distribute and/or modify this document under the
    terms of the <acronym>GNU</acronym> General Public License,
    version 2, as published by the Free Software Foundation.</para>

  </refsect1>
</refentry>

